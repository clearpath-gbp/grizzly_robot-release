#!/bin/bash
source `rospack find rosbash`/rosbash

# Install the udev rules.
rospd grizzly_bringup/udev > /dev/null
echo "Installing udev rules."
sudo cp *.rules /etc/udev/rules.d/
popd > /dev/null
sudo udevadm trigger

# Install the upstart job, populate it with launch files.
#  * For the network interface, first try script parameter $1, then ROBOT_NETWORK, then eth0.
#  * For the setup.bash to use, first try ROBOT_SETUP, then fall back on setup.bash from active workspace.
#    In CPR-configured Ubuntu machines, /etc/ros/setup.bash is a wrapper on /opt/ros/xxx/setup.bash, and sets the
#    ROBOT_SETUP var to itself. This allows platform-wide env vars to be placed in that file.
install_pkg="rosrun robot_upstart install"
$install_pkg grizzly_bringup/launch/core \
  --job grizzly-core \
  --interface ${ROBOT_NETWORK-br0} \
  --setup ${ROBOT_SETUP-$(roscd; echo `pwd`/setup.bash)}
$install_pkg grizzly_base/launch --job grizzly-core --augment
$install_pkg grizzly_motion/launch --job grizzly-core --augment
$install_pkg grizzly_teleop/launch/ps3nav_teleop.launch --job grizzly-core --augment
$install_pkg grizzly_description/urdf/base.urdf.xacro --job grizzly-core --augment

EKF_SETTINGS_YAML=/etc/ros/$ROS_DISTRO/grizzly_ekf.yaml
if [ -e "$EKF_SETTINGS_YAML" ]; then
  echo "EKF settings yaml config already exists, skipping."
else 
  echo "Installing default EKF settings file to $EKF_SETTINGS_YAML"
  sudo cp "$(catkin_find grizzly_bringup config/grizzly_ekf.yaml)" "$EKF_SETTINGS_YAML"
fi

if [[ -n "$ROBOT_EXTRAS_PACKAGE" ]]; then
  echo "Installing extras specific to this robot from the $ROBOT_EXTRAS_PACKAGE package."
  rosrun "$ROBOT_EXTRAS_PACKAGE" install
fi
